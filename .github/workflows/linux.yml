jobs:
  stage_0_job_0:
    name: roslint geometric-shapes rosbash-params imu-transformer compass-msgs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    needs: []
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-roslint ros-noetic-geometric-shapes ros-noetic-rosbash-params
        ros-noetic-imu-transformer ros-noetic-compass-msgs
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-roslint ros-noetic-geometric-shapes ros-noetic-rosbash-params
          ros-noetic-imu-transformer ros-noetic-compass-msgs
        DOCKER_IMAGE: condaforge/linux-anvil-cos7-x86_64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_0_job_1:
    name: tf-remapper-cpp tf2-server tf2-client static-transform-mux snmp-ros
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    needs: []
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-tf-remapper-cpp ros-noetic-tf2-server ros-noetic-tf2-client
        ros-noetic-static-transform-mux ros-noetic-snmp-ros
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-tf-remapper-cpp ros-noetic-tf2-server ros-noetic-tf2-client
          ros-noetic-static-transform-mux ros-noetic-snmp-ros
        DOCKER_IMAGE: condaforge/linux-anvil-cos7-x86_64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_0_job_2:
    name: rosmsg-cpp dynamic-robot-state-publisher draco
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    needs: []
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-rosmsg-cpp ros-noetic-dynamic-robot-state-publisher draco
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-rosmsg-cpp ros-noetic-dynamic-robot-state-publisher
          draco
        DOCKER_IMAGE: condaforge/linux-anvil-cos7-x86_64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_1_job_3:
    name: cras-cpp-common cras-msgs electronic-io-msgs robot-body-filter movie-publisher
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    - stage_0_job_1
    - stage_0_job_2
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-cras-cpp-common ros-noetic-cras-msgs ros-noetic-electronic-io-msgs
        ros-noetic-robot-body-filter ros-noetic-movie-publisher
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-cras-cpp-common ros-noetic-cras-msgs ros-noetic-electronic-io-msgs
          ros-noetic-robot-body-filter ros-noetic-movie-publisher
        DOCKER_IMAGE: condaforge/linux-anvil-cos7-x86_64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_1_job_4:
    name: cras-relative-positional-controller cras-docs-common
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    - stage_0_job_1
    - stage_0_job_2
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-cras-relative-positional-controller ros-noetic-cras-docs-common
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-cras-relative-positional-controller ros-noetic-cras-docs-common
        DOCKER_IMAGE: condaforge/linux-anvil-cos7-x86_64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_2_job_5:
    name: cras-py-common magnetometer-compass electronic-io cras-topic-tools
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    needs:
    - stage_1_job_3
    - stage_1_job_4
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-cras-py-common ros-noetic-magnetometer-compass ros-noetic-electronic-io
        ros-noetic-cras-topic-tools
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-cras-py-common ros-noetic-magnetometer-compass
          ros-noetic-electronic-io ros-noetic-cras-topic-tools
        DOCKER_IMAGE: condaforge/linux-anvil-cos7-x86_64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_3_job_6:
    name: point-cloud-transport image-transport-codecs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    needs:
    - stage_2_job_5
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-point-cloud-transport ros-noetic-image-transport-codecs
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-point-cloud-transport ros-noetic-image-transport-codecs
        DOCKER_IMAGE: condaforge/linux-anvil-cos7-x86_64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
  stage_4_job_7:
    name: draco-point-cloud-transport sensor-filters point-cloud-color point-cloud-transport-plugins
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    needs:
    - stage_3_job_6
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Build ros-noetic-draco-point-cloud-transport ros-noetic-sensor-filters
        ros-noetic-point-cloud-color ros-noetic-point-cloud-transport-plugins
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-noetic-draco-point-cloud-transport ros-noetic-sensor-filters
          ros-noetic-point-cloud-color ros-noetic-point-cloud-transport-plugins
        DOCKER_IMAGE: condaforge/linux-anvil-cos7-x86_64
      run: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
name: build_linux
on:
  push:
    branches:
    - buildbranch_linux
